#:set button_bar_height dp(45)

<ColouredButton>:
    background_down: (0.2, 0.6431, 0.8078, 1.)
    background_normal: (0.4, 0.4, 0.4, 0.8)
    radius: dp(5)
    canvas.before:
        Color:
            rgba: self.background_normal if self.state == 'normal' else self.background_down
        RoundedRectangle:
            pos: self.x + self.padding, self.y + self.padding
            size: self.width - 2*self.padding, self.height - 2*self.padding
            radius: [(self.radius, self.radius) for _ in range(4)]

<Manager>:
    canvas.before:
        Color:
            rgba: 0.9, 0.9, 0.9, 1
        Rectangle:
            pos: self.pos
            size: self.size

    DeviceInfoScreen:
    TapInputScreen:
    SwipeInputScreen:
    OtherInputScreen:
    FinalScreen:

<WrappingLabel@Label>:
    text_size: self.width, None
    size_hint_y: None
    height: self.texture_size[1]
    padding: dp(10), dp(4)
    halign: 'left'
    valign: 'middle'
    color: 0, 0, 0, 1

<Title@Label>:
    padding: dp(10), dp(10)
    font_size: sp(20)
    color: 0, 0, 0, 1
    text_size: self.width, None
    size_hint_y: None
    height: self.texture_size[1]
    valign: 'middle'
    halign: 'center'

<Spacer@Widget>:
    size_hint_y: None

<HorizontalRule@Widget>:
    size_hint_y: None
    height: dp(2)
    canvas:
        Color:
            rgba: 0.2, 0.2, 0.2, 1
        Rectangle:
            pos: self.pos
            size: self.size

<DeviceInfoScreen>:
    name: 'deviceinfo'
    BoxLayout:
        orientation: 'vertical'
        Title:
            text: 'Device info:'
        WrappingLabel:
            text: 'brand: {}'.format(root.brand)
        # WrappingLabel:
        #     text: 'device: {}'.format(root.device)
        WrappingLabel:
            text: 'manufacturer: {}'.format(root.manufacturer)
        WrappingLabel:
            text: 'model: {}'.format(root.model)
        # WrappingLabel:
        #     text: 'product: {}'.format(root.product)
        Spacer:
            height: dp(5)
        HorizontalRule:
        Title:
            text: 'Instructions'
        WrappingLabel:
            text: root.instruction_text
        WrappingLabel:
            text: root.no_output_text
        WrappingLabel:
            text: root.error_text
        WrappingLabel:
            text: root.unavailibility_text
        Spacer:
            height: dp(10)
        AnchorLayout:
            anchor_y: 'top'
            ColouredButton:
                padding: dp(5)
                text: 'start'
                size_hint_y: None
                height: dp(55)
                size_hint_x: None
                width: self.texture_size[0] * 2.5
                font_size: sp(20)
                on_release: app.root.current = 'tapinput'

<TapInputScreen>:
    name: 'tapinput'
    BoxLayout:
        orientation: 'vertical'
        Widget:
        Title:
            text: 'Tap input'
        WrappingLabel:
            text: 'Please select the textinput below and enter the text \'[color=#000099]One two three four five[/color]\' by [color=#aa00aa]tapping the keyboard buttons[/color].'
            markup: True
        WrappingLabel:
            text: 'Do not use swipe input or autocomplete if possible.'
        WrappingLabel:
            text: 'If you don\'t see any input, or any letters do not work, continue entering the text as if the input were working.'
        AnchorLayout:
            size_hint_y: None
            height: dp(40)
            TextInput:
                size_hint_x: 0.98

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: button_bar_height
            ColouredButton:
                background_normal: 0.7, 0.4, 0.4, 1
                text: 'skip'
                font_size: sp(20)
                padding: dp(5)
                on_release: root.skip()
            ColouredButton:
                background_normal: 0.4, 0.7, 0.4, 1
                text: 'done'
                font_size: sp(20)
                padding: dp(5)
                on_release: root.done()
            

<SwipeInputScreen>:
    name: 'swipeinput'
    BoxLayout:
        orientation: 'vertical'
        Widget:
        Title:
            text: 'Swipe input'
        WrappingLabel:
            text: 'Please select the textinput below and enter the text \'[color=#000099]Six seven eight nine ten[/color]\' by [color=#aa00aa]swiping the words[/color].'
            markup: True
        WrappingLabel:
            text: 'If your keyboard does not support swipe input, please press \'[color=#990000]skip[/color]\'.'
            markup: True
        WrappingLabel:
            text: 'If you don\'t see any input, please continue swiping the words, pressing the space key after each one.'
        AnchorLayout:
            size_hint_y: None
            height: dp(40)
            TextInput:
                size_hint_x: 0.98

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: button_bar_height
            ColouredButton:
                background_normal: 0.7, 0.4, 0.4, 1
                text: 'skip'
                font_size: sp(20)
                padding: dp(5)
                on_release: root.skip()
            ColouredButton:
                background_normal: 0.4, 0.7, 0.4, 1
                text: 'done'
                font_size: sp(20)
                padding: dp(5)
                on_release: root.done()

<OtherInputScreen>:
    name: 'otherinput'
    BoxLayout:
        orientation: 'vertical'
        Widget:
        Title:
            text: 'Other input'
        WrappingLabel:
            text: 'Please select the textinput below and enter the text \'[color=#000099]Eleven twelve thirteen fourteen fifteen[/color]\' using [color=#aa00aa]any other input methods supported by your keyboard[/color].'
            markup: True
        WrappingLabel:
            text: 'For instance: if your keyboard supports [color=#aa00aa]autocompletion[/color], use it to select some of the words. If your keyboard supports [color=#aa00aa]spelling correction[/color], spell some of the words wrong and use the keyboard to correct them.'
            markup: True
        WrappingLabel:
            text: 'If your keyboard does not support any other input mechanisms, just choose \'[color=#aa00aa]skip[/color]\'.'
            markup: True
        WrappingLabel:
            text: 'If the text shown in the text input box is not what you input, just keep entering text as if it were correct.'
        AnchorLayout:
            size_hint_y: None
            height: dp(40)
            TextInput:
                size_hint_x: 0.98

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: button_bar_height
            ColouredButton:
                background_normal: 0.7, 0.4, 0.4, 1
                text: 'skip'
                font_size: sp(20)
                padding: dp(5)
                on_release: root.skip()
            ColouredButton:
                background_normal: 0.4, 0.7, 0.4, 1
                text: 'done'
                font_size: sp(20)
                padding: dp(5)
                on_release: root.done()

<FinalScreen>:
    name: 'final'
    BoxLayout:
        orientation: 'vertical'
        Title:
            text: 'Almost done'
        WrappingLabel:
            text: 'Thank you for producing this debug information. There\'s one thing left to do: press \'send email\' below to return your keyboard log.'
            markup: True
        AnchorLayout:
            size_hint_y: None
            height: dp(55)
            anchor_y: 'top'
            ColouredButton:
                padding: dp(5)
                text: 'send email'
                size_hint_x: None
                width: self.texture_size[0] * 2.5
                font_size: sp(25)
                on_release: app.send_email()
        WrappingLabel:
            text: 'If you need to try again, just restart the app and follow the instructions.'
        HorizontalRule:
        WrappingLabel:
            text: 'If you are interested, the log that will be reported is:'
        ScrollLabel:
            text: 'ars arst arst arst arstarstarst arst arst ars ' * 100
            color: (1, 0, 0, 1)

